// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Rescaler is an autogenerated mock type for the Rescaler type
type Rescaler struct {
	mock.Mock
}

type Rescaler_Expecter struct {
	mock *mock.Mock
}

func (_m *Rescaler) EXPECT() *Rescaler_Expecter {
	return &Rescaler_Expecter{mock: &_m.Mock}
}

// Rescale provides a mock function with given fields:
func (_m *Rescaler) Rescale() {
	_m.Called()
}

// Rescaler_Rescale_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Rescale'
type Rescaler_Rescale_Call struct {
	*mock.Call
}

// Rescale is a helper method to define mock.On call
func (_e *Rescaler_Expecter) Rescale() *Rescaler_Rescale_Call {
	return &Rescaler_Rescale_Call{Call: _e.mock.On("Rescale")}
}

func (_c *Rescaler_Rescale_Call) Run(run func()) *Rescaler_Rescale_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Rescaler_Rescale_Call) Return() *Rescaler_Rescale_Call {
	_c.Call.Return()
	return _c
}

func (_c *Rescaler_Rescale_Call) RunAndReturn(run func()) *Rescaler_Rescale_Call {
	_c.Call.Return(run)
	return _c
}

// NewRescaler creates a new instance of Rescaler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRescaler(t interface {
	mock.TestingT
	Cleanup(func())
}) *Rescaler {
	mock := &Rescaler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
